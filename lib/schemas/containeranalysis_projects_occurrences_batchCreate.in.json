{
    "type": "object",
    "properties": {
        "parent": {
            "required": true,
            "type": "string"
        },
        "access_token": {
            "type": "string"
        },
        "alt": {
            "type": "string",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "default": "json"
        },
        "callback": {
            "type": "string"
        },
        "fields": {
            "type": "string"
        },
        "key": {
            "type": "string"
        },
        "oauth_token": {
            "type": "string"
        },
        "prettyPrint": {
            "type": "boolean",
            "default": true
        },
        "quotaUser": {
            "type": "string"
        },
        "uploadType": {
            "type": "string"
        },
        "upload_protocol": {
            "type": "string"
        },
        "requestBody": {
            "description": "Request to create occurrences in batch.",
            "properties": {
                "occurrences": {
                    "description": "The occurrences to create. Max allowed length is 1000.",
                    "items": {
                        "description": "An instance of an analysis type that has been found on a resource.",
                        "properties": {
                            "attestation": {
                                "description": "Describes an attestation of an artifact.",
                                "properties": {
                                    "attestation": {
                                        "description": "Required. Attestation for the resource.",
                                        "properties": {
                                            "pgpSignedAttestation": {
                                                "description": "A PGP signed attestation.",
                                                "properties": {
                                                    "contentType": {
                                                        "description": "Type (for example schema) of the attestation payload that was signed.\nThe verifier must ensure that the provided type is one that the verifier\nsupports, and that the attestation payload is a valid instantiation of that\ntype (for example by validating a JSON schema).",
                                                        "enum": [
                                                            "CONTENT_TYPE_UNSPECIFIED",
                                                            "SIMPLE_SIGNING_JSON"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "pgpKeyId": {
                                                        "description": "The cryptographic fingerprint of the key used to generate the signature,\nas output by, e.g. `gpg --list-keys`. This should be the version 4, full\n160-bit fingerprint, expressed as a 40 character hexidecimal string. See\nhttps://tools.ietf.org/html/rfc4880#section-12.2 for details.\nImplementations may choose to acknowledge \"LONG\", \"SHORT\", or other\nabbreviated key IDs, but only the full fingerprint is guaranteed to work.\nIn gpg, the full fingerprint can be retrieved from the `fpr` field\nreturned when calling --list-keys with --with-colons.  For example:\n```\ngpg --with-colons --with-fingerprint --force-v4-certs \\\n    --list-keys attester@example.com\ntru::1:1513631572:0:3:1:5\npub:...<SNIP>...\nfpr:::::::::24FF6481B76AC91E66A00AC657A93A81EF3AE6FB:\n```\nAbove, the fingerprint is `24FF6481B76AC91E66A00AC657A93A81EF3AE6FB`.",
                                                        "type": "string"
                                                    },
                                                    "signature": {
                                                        "description": "Required. The raw content of the signature, as output by GNU Privacy Guard\n(GPG) or equivalent. Since this message only supports attached signatures,\nthe payload that was signed must be attached. While the signature format\nsupported is dependent on the verification implementation, currently only\nASCII-armored (`--armor` to gpg), non-clearsigned (`--sign` rather than\n`--clearsign` to gpg) are supported. Concretely, `gpg --sign --armor\n--output=signature.gpg payload.json` will create the signature content\nexpected in this field in `signature.gpg` for the `payload.json`\nattestation payload.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "build": {
                                "description": "Describes a verifiable build.",
                                "properties": {
                                    "provenance": {
                                        "description": "Required. The actual provenance for the build.",
                                        "properties": {
                                            "buildOptions": {
                                                "additionalProperties": {
                                                    "type": "string"
                                                },
                                                "description": "Special options applied to this build. This is a catch-all field where\nbuild providers can enter any desired additional details.",
                                                "type": "object"
                                            },
                                            "builderVersion": {
                                                "description": "Version string of the builder at the time this build was executed.",
                                                "type": "string"
                                            },
                                            "builtArtifacts": {
                                                "description": "Output of the build.",
                                                "items": {
                                                    "description": "Artifact describes a build product.",
                                                    "properties": {
                                                        "checksum": {
                                                            "description": "Hash or checksum value of a binary, or Docker Registry 2.0 digest of a\ncontainer.",
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "description": "Artifact ID, if any; for container images, this will be a URL by digest\nlike `gcr.io/projectID/imagename@sha256:123456`.",
                                                            "type": "string"
                                                        },
                                                        "names": {
                                                            "description": "Related artifact names. This may be the path to a binary or jar file, or in\nthe case of a container build, the name used to push the container image to\nGoogle Container Registry, as presented to `docker push`. Note that a\nsingle Artifact ID can have multiple names, for example if two tags are\napplied to one image.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "commands": {
                                                "description": "Commands requested by the build.",
                                                "items": {
                                                    "description": "Command describes a step performed as part of the build pipeline.",
                                                    "properties": {
                                                        "args": {
                                                            "description": "Command-line arguments used when executing this command.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "dir": {
                                                            "description": "Working directory (relative to project source root) used when running this\ncommand.",
                                                            "type": "string"
                                                        },
                                                        "env": {
                                                            "description": "Environment variables set before running this command.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "id": {
                                                            "description": "Optional unique identifier for this command, used in wait_for to reference\nthis command as a dependency.",
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "Required. Name of the command, as presented on the command line, or if the\ncommand is packaged as a Docker container, as presented to `docker pull`.",
                                                            "type": "string"
                                                        },
                                                        "waitFor": {
                                                            "description": "The ID(s) of the command(s) that this command depends on.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "createTime": {
                                                "description": "Time at which the build was created.",
                                                "format": "google-datetime",
                                                "type": "string"
                                            },
                                            "creator": {
                                                "description": "E-mail address of the user who initiated this build. Note that this was the\nuser's e-mail address at the time the build was initiated; this address may\nnot represent the same end-user for all time.",
                                                "type": "string"
                                            },
                                            "endTime": {
                                                "description": "Time at which execution of the build was finished.",
                                                "format": "google-datetime",
                                                "type": "string"
                                            },
                                            "id": {
                                                "description": "Required. Unique identifier of the build.",
                                                "type": "string"
                                            },
                                            "logsUri": {
                                                "description": "URI where any logs for this provenance were written.",
                                                "type": "string"
                                            },
                                            "projectId": {
                                                "description": "ID of the project.",
                                                "type": "string"
                                            },
                                            "sourceProvenance": {
                                                "description": "Details of the Source input to the build.",
                                                "properties": {
                                                    "additionalContexts": {
                                                        "description": "If provided, some of the source code used for the build may be found in\nthese locations, in the case where the source repository had multiple\nremotes or submodules. This list will not include the context specified in\nthe context field.",
                                                        "items": {
                                                            "description": "A SourceContext is a reference to a tree of files. A SourceContext together\nwith a path point to a unique revision of a single file or directory.",
                                                            "properties": {
                                                                "cloudRepo": {
                                                                    "description": "A SourceContext referring to a revision in a Google Cloud Source Repo.",
                                                                    "properties": {
                                                                        "aliasContext": {
                                                                            "description": "An alias, which may be a branch or tag.",
                                                                            "properties": {
                                                                                "kind": {
                                                                                    "description": "The alias kind.",
                                                                                    "enum": [
                                                                                        "KIND_UNSPECIFIED",
                                                                                        "FIXED",
                                                                                        "MOVABLE",
                                                                                        "OTHER"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "description": "The alias name.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "repoId": {
                                                                            "description": "The ID of the repo.",
                                                                            "properties": {
                                                                                "projectRepoId": {
                                                                                    "description": "A combination of a project ID and a repo name.",
                                                                                    "properties": {
                                                                                        "projectId": {
                                                                                            "description": "The ID of the project.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "repoName": {
                                                                                            "description": "The name of the repo. Leave empty for the default repo.",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "uid": {
                                                                                    "description": "A server-assigned, globally unique identifier.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "revisionId": {
                                                                            "description": "A revision ID.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "gerrit": {
                                                                    "description": "A SourceContext referring to a Gerrit project.",
                                                                    "properties": {
                                                                        "aliasContext": {
                                                                            "description": "An alias, which may be a branch or tag.",
                                                                            "properties": {
                                                                                "kind": {
                                                                                    "description": "The alias kind.",
                                                                                    "enum": [
                                                                                        "KIND_UNSPECIFIED",
                                                                                        "FIXED",
                                                                                        "MOVABLE",
                                                                                        "OTHER"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "description": "The alias name.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "gerritProject": {
                                                                            "description": "The full project name within the host. Projects may be nested, so\n\"project/subproject\" is a valid project name. The \"repo name\" is the\nhostURI/project.",
                                                                            "type": "string"
                                                                        },
                                                                        "hostUri": {
                                                                            "description": "The URI of a running Gerrit instance.",
                                                                            "type": "string"
                                                                        },
                                                                        "revisionId": {
                                                                            "description": "A revision (commit) ID.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "git": {
                                                                    "description": "A SourceContext referring to any third party Git repo (e.g., GitHub).",
                                                                    "properties": {
                                                                        "revisionId": {
                                                                            "description": "Git commit hash.",
                                                                            "type": "string"
                                                                        },
                                                                        "url": {
                                                                            "description": "Git repository URL.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "labels": {
                                                                    "additionalProperties": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "Labels with user defined metadata.",
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "artifactStorageSourceUri": {
                                                        "description": "If provided, the input binary artifacts for the build came from this\nlocation.",
                                                        "type": "string"
                                                    },
                                                    "context": {
                                                        "description": "If provided, the source code used for the build came from this location.",
                                                        "properties": {
                                                            "cloudRepo": {
                                                                "description": "A SourceContext referring to a revision in a Google Cloud Source Repo.",
                                                                "properties": {
                                                                    "aliasContext": {
                                                                        "description": "An alias, which may be a branch or tag.",
                                                                        "properties": {
                                                                            "kind": {
                                                                                "description": "The alias kind.",
                                                                                "enum": [
                                                                                    "KIND_UNSPECIFIED",
                                                                                    "FIXED",
                                                                                    "MOVABLE",
                                                                                    "OTHER"
                                                                                ],
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "The alias name.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "repoId": {
                                                                        "description": "The ID of the repo.",
                                                                        "properties": {
                                                                            "projectRepoId": {
                                                                                "description": "A combination of a project ID and a repo name.",
                                                                                "properties": {
                                                                                    "projectId": {
                                                                                        "description": "The ID of the project.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "repoName": {
                                                                                        "description": "The name of the repo. Leave empty for the default repo.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "uid": {
                                                                                "description": "A server-assigned, globally unique identifier.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "revisionId": {
                                                                        "description": "A revision ID.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "gerrit": {
                                                                "description": "A SourceContext referring to a Gerrit project.",
                                                                "properties": {
                                                                    "aliasContext": {
                                                                        "description": "An alias, which may be a branch or tag.",
                                                                        "properties": {
                                                                            "kind": {
                                                                                "description": "The alias kind.",
                                                                                "enum": [
                                                                                    "KIND_UNSPECIFIED",
                                                                                    "FIXED",
                                                                                    "MOVABLE",
                                                                                    "OTHER"
                                                                                ],
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "The alias name.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "gerritProject": {
                                                                        "description": "The full project name within the host. Projects may be nested, so\n\"project/subproject\" is a valid project name. The \"repo name\" is the\nhostURI/project.",
                                                                        "type": "string"
                                                                    },
                                                                    "hostUri": {
                                                                        "description": "The URI of a running Gerrit instance.",
                                                                        "type": "string"
                                                                    },
                                                                    "revisionId": {
                                                                        "description": "A revision (commit) ID.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "git": {
                                                                "description": "A SourceContext referring to any third party Git repo (e.g., GitHub).",
                                                                "properties": {
                                                                    "revisionId": {
                                                                        "description": "Git commit hash.",
                                                                        "type": "string"
                                                                    },
                                                                    "url": {
                                                                        "description": "Git repository URL.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "labels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "Labels with user defined metadata.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "fileHashes": {
                                                        "additionalProperties": {
                                                            "description": "Container message for hashes of byte content of files, used in source\nmessages to verify integrity of source input to the build.",
                                                            "properties": {
                                                                "fileHash": {
                                                                    "description": "Required. Collection of file hashes.",
                                                                    "items": {
                                                                        "description": "Container message for hash values.",
                                                                        "properties": {
                                                                            "type": {
                                                                                "description": "Required. The type of hash that was performed.",
                                                                                "enum": [
                                                                                    "HASH_TYPE_UNSPECIFIED",
                                                                                    "SHA256"
                                                                                ],
                                                                                "type": "string"
                                                                            },
                                                                            "value": {
                                                                                "description": "Required. The hash value.",
                                                                                "format": "byte",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "description": "Hash(es) of the build source, which can be used to verify that the original\nsource integrity was maintained in the build.\n\nThe keys to this map are file paths used as build source and the values\ncontain the hash values for those files.\n\nIf the build source came in a single package such as a gzipped tarfile\n(.tar.gz), the FileHash will be for the single path to that file.",
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "startTime": {
                                                "description": "Time at which execution of the build was started.",
                                                "format": "google-datetime",
                                                "type": "string"
                                            },
                                            "triggerId": {
                                                "description": "Trigger identifier if the build was triggered automatically; empty if not.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "provenanceBytes": {
                                        "description": "Serialized JSON representation of the provenance, used in generating the\nbuild signature in the corresponding build note. After verifying the\nsignature, `provenance_bytes` can be unmarshalled and compared to the\nprovenance to confirm that it is unchanged. A base64-encoded string\nrepresentation of the provenance bytes is used for the signature in order\nto interoperate with openssl which expects this format for signature\nverification.\n\nThe serialized form is captured both to avoid ambiguity in how the\nprovenance is marshalled to json as well to prevent incompatibilities with\nfuture changes.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "createTime": {
                                "description": "Output only. The time this occurrence was created.",
                                "format": "google-datetime",
                                "type": "string"
                            },
                            "deployment": {
                                "description": "Describes the deployment of an artifact on a runtime.",
                                "properties": {
                                    "deployment": {
                                        "description": "Required. Deployment history for the resource.",
                                        "properties": {
                                            "address": {
                                                "description": "Address of the runtime element hosting this deployment.",
                                                "type": "string"
                                            },
                                            "config": {
                                                "description": "Configuration used to create this deployment.",
                                                "type": "string"
                                            },
                                            "deployTime": {
                                                "description": "Required. Beginning of the lifetime of this deployment.",
                                                "format": "google-datetime",
                                                "type": "string"
                                            },
                                            "platform": {
                                                "description": "Platform hosting this deployment.",
                                                "enum": [
                                                    "PLATFORM_UNSPECIFIED",
                                                    "GKE",
                                                    "FLEX",
                                                    "CUSTOM"
                                                ],
                                                "type": "string"
                                            },
                                            "resourceUri": {
                                                "description": "Output only. Resource URI for the artifact being deployed taken from\nthe deployable field with the same name.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "undeployTime": {
                                                "description": "End of the lifetime of this deployment.",
                                                "format": "google-datetime",
                                                "type": "string"
                                            },
                                            "userEmail": {
                                                "description": "Identity of the user that triggered this deployment.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "derivedImage": {
                                "description": "Describes how this resource derives from the basis in the associated\nnote.",
                                "properties": {
                                    "derivedImage": {
                                        "description": "Required. Immutable. The child image derived from the base image.",
                                        "properties": {
                                            "baseResourceUrl": {
                                                "description": "Output only. This contains the base image URL for the derived image\noccurrence.",
                                                "type": "string"
                                            },
                                            "distance": {
                                                "description": "Output only. The number of layers by which this image differs from the\nassociated image basis.",
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "fingerprint": {
                                                "description": "Required. The fingerprint of the derived image.",
                                                "properties": {
                                                    "v1Name": {
                                                        "description": "Required. The layer ID of the final layer in the Docker image's v1\nrepresentation.",
                                                        "type": "string"
                                                    },
                                                    "v2Blob": {
                                                        "description": "Required. The ordered list of v2 blobs that represent a given image.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v2Name": {
                                                        "description": "Output only. The name of the image's v2 blobs computed via:\n  [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1])\nOnly the name of the final blob is kept.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "layerInfo": {
                                                "description": "This contains layer-specific metadata, if populated it has length\n\"distance\" and is ordered with [distance] being the layer immediately\nfollowing the base image and [1] being the final layer.",
                                                "items": {
                                                    "description": "Layer holds metadata specific to a layer of a Docker image.",
                                                    "properties": {
                                                        "arguments": {
                                                            "description": "The recovered arguments to the Dockerfile directive.",
                                                            "type": "string"
                                                        },
                                                        "directive": {
                                                            "description": "Required. The recovered Dockerfile directive used to construct this layer.",
                                                            "enum": [
                                                                "DIRECTIVE_UNSPECIFIED",
                                                                "MAINTAINER",
                                                                "RUN",
                                                                "CMD",
                                                                "LABEL",
                                                                "EXPOSE",
                                                                "ENV",
                                                                "ADD",
                                                                "COPY",
                                                                "ENTRYPOINT",
                                                                "VOLUME",
                                                                "USER",
                                                                "WORKDIR",
                                                                "ARG",
                                                                "ONBUILD",
                                                                "STOPSIGNAL",
                                                                "HEALTHCHECK",
                                                                "SHELL"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "discovered": {
                                "description": "Describes when a resource was discovered.",
                                "properties": {
                                    "discovered": {
                                        "description": "Required. Analysis status for the discovered resource.",
                                        "properties": {
                                            "analysisStatus": {
                                                "description": "The status of discovery for the resource.",
                                                "enum": [
                                                    "ANALYSIS_STATUS_UNSPECIFIED",
                                                    "PENDING",
                                                    "SCANNING",
                                                    "FINISHED_SUCCESS",
                                                    "FINISHED_FAILED",
                                                    "FINISHED_UNSUPPORTED"
                                                ],
                                                "type": "string"
                                            },
                                            "analysisStatusError": {
                                                "description": "When an error is encountered this will contain a LocalizedMessage under\ndetails to show to the user. The LocalizedMessage is output only and\npopulated by the API.",
                                                "properties": {
                                                    "code": {
                                                        "description": "The status code, which should be an enum value of google.rpc.Code.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "details": {
                                                        "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
                                                        "items": {
                                                            "additionalProperties": {
                                                                "description": "Properties of the object. Contains field @type with type URL."
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "message": {
                                                        "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "continuousAnalysis": {
                                                "description": "Whether the resource is continuously analyzed.",
                                                "enum": [
                                                    "CONTINUOUS_ANALYSIS_UNSPECIFIED",
                                                    "ACTIVE",
                                                    "INACTIVE"
                                                ],
                                                "type": "string"
                                            },
                                            "lastAnalysisTime": {
                                                "description": "The last time continuous analysis was done for this resource.\nDeprecated, do not use.",
                                                "format": "google-datetime",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "installation": {
                                "description": "Describes the installation of a package on the linked resource.",
                                "properties": {
                                    "installation": {
                                        "description": "Required. Where the package was installed.",
                                        "properties": {
                                            "location": {
                                                "description": "Required. All of the places within the filesystem versions of this package\nhave been found.",
                                                "items": {
                                                    "description": "An occurrence of a particular package installation found within a system's\nfilesystem. E.g., glibc was found in `/var/lib/dpkg/status`.",
                                                    "properties": {
                                                        "cpeUri": {
                                                            "description": "Required. The CPE URI in [CPE format](https://cpe.mitre.org/specification/)\ndenoting the package manager version distributing a package.",
                                                            "type": "string"
                                                        },
                                                        "path": {
                                                            "description": "The path from which we gathered that this package/version is installed.",
                                                            "type": "string"
                                                        },
                                                        "version": {
                                                            "description": "The version installed at this location.",
                                                            "properties": {
                                                                "epoch": {
                                                                    "description": "Used to correct mistakes in the version numbering scheme.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "kind": {
                                                                    "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal\nversions.",
                                                                    "enum": [
                                                                        "VERSION_KIND_UNSPECIFIED",
                                                                        "NORMAL",
                                                                        "MINIMUM",
                                                                        "MAXIMUM"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "description": "Required only when version kind is NORMAL. The main part of the version\nname.",
                                                                    "type": "string"
                                                                },
                                                                "revision": {
                                                                    "description": "The iteration of the package build from the above version.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "name": {
                                                "description": "Output only. The name of the installed package.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "kind": {
                                "description": "Output only. This explicitly denotes which of the occurrence details are\nspecified. This field can be used as a filter in list requests.",
                                "enum": [
                                    "NOTE_KIND_UNSPECIFIED",
                                    "VULNERABILITY",
                                    "BUILD",
                                    "IMAGE",
                                    "PACKAGE",
                                    "DEPLOYMENT",
                                    "DISCOVERY",
                                    "ATTESTATION"
                                ],
                                "type": "string"
                            },
                            "name": {
                                "description": "Output only. The name of the occurrence in the form of\n`projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.",
                                "type": "string"
                            },
                            "noteName": {
                                "description": "Required. Immutable. The analysis note associated with this occurrence, in\nthe form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be\nused as a filter in list requests.",
                                "type": "string"
                            },
                            "remediation": {
                                "description": "A description of actions that can be taken to remedy the note.",
                                "type": "string"
                            },
                            "resource": {
                                "description": "Required. Immutable. The resource for which the occurrence applies.",
                                "properties": {
                                    "contentHash": {
                                        "description": "The hash of the resource content. For example, the Docker digest.",
                                        "properties": {
                                            "type": {
                                                "description": "Required. The type of hash that was performed.",
                                                "enum": [
                                                    "HASH_TYPE_UNSPECIFIED",
                                                    "SHA256"
                                                ],
                                                "type": "string"
                                            },
                                            "value": {
                                                "description": "Required. The hash value.",
                                                "format": "byte",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "name": {
                                        "description": "The name of the resource. For example, the name of a Docker image -\n\"Debian\".",
                                        "type": "string"
                                    },
                                    "uri": {
                                        "description": "Required. The unique URI of the resource. For example,\n`https://gcr.io/project/image@sha256:foo` for a Docker image.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "updateTime": {
                                "description": "Output only. The time this occurrence was last updated.",
                                "format": "google-datetime",
                                "type": "string"
                            },
                            "vulnerability": {
                                "description": "Describes a security vulnerability.",
                                "properties": {
                                    "cvssScore": {
                                        "description": "Output only. The CVSS score of this vulnerability. CVSS score is on a\nscale of 0-10 where 0 indicates low severity and 10 indicates high\nseverity.",
                                        "format": "float",
                                        "type": "number"
                                    },
                                    "effectiveSeverity": {
                                        "description": "The distro assigned severity for this vulnerability when it is\navailable, and note provider assigned severity when distro has not yet\nassigned a severity for this vulnerability.",
                                        "enum": [
                                            "SEVERITY_UNSPECIFIED",
                                            "MINIMAL",
                                            "LOW",
                                            "MEDIUM",
                                            "HIGH",
                                            "CRITICAL"
                                        ],
                                        "type": "string"
                                    },
                                    "longDescription": {
                                        "description": "Output only. A detailed description of this vulnerability.",
                                        "type": "string"
                                    },
                                    "packageIssue": {
                                        "description": "Required. The set of affected locations and their fixes (if available)\nwithin the associated resource.",
                                        "items": {
                                            "description": "This message wraps a location affected by a vulnerability and its\nassociated fix (if one is available).",
                                            "properties": {
                                                "affectedLocation": {
                                                    "description": "Required. The location of the vulnerability.",
                                                    "properties": {
                                                        "cpeUri": {
                                                            "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/)\nformat. Examples include distro or storage location for vulnerable jar.",
                                                            "type": "string"
                                                        },
                                                        "package": {
                                                            "description": "Required. The package being described.",
                                                            "type": "string"
                                                        },
                                                        "version": {
                                                            "description": "Required. The version of the package being described.",
                                                            "properties": {
                                                                "epoch": {
                                                                    "description": "Used to correct mistakes in the version numbering scheme.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "kind": {
                                                                    "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal\nversions.",
                                                                    "enum": [
                                                                        "VERSION_KIND_UNSPECIFIED",
                                                                        "NORMAL",
                                                                        "MINIMUM",
                                                                        "MAXIMUM"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "description": "Required only when version kind is NORMAL. The main part of the version\nname.",
                                                                    "type": "string"
                                                                },
                                                                "revision": {
                                                                    "description": "The iteration of the package build from the above version.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "fixedLocation": {
                                                    "description": "The location of the available fix for vulnerability.",
                                                    "properties": {
                                                        "cpeUri": {
                                                            "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/)\nformat. Examples include distro or storage location for vulnerable jar.",
                                                            "type": "string"
                                                        },
                                                        "package": {
                                                            "description": "Required. The package being described.",
                                                            "type": "string"
                                                        },
                                                        "version": {
                                                            "description": "Required. The version of the package being described.",
                                                            "properties": {
                                                                "epoch": {
                                                                    "description": "Used to correct mistakes in the version numbering scheme.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "kind": {
                                                                    "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal\nversions.",
                                                                    "enum": [
                                                                        "VERSION_KIND_UNSPECIFIED",
                                                                        "NORMAL",
                                                                        "MINIMUM",
                                                                        "MAXIMUM"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "description": "Required only when version kind is NORMAL. The main part of the version\nname.",
                                                                    "type": "string"
                                                                },
                                                                "revision": {
                                                                    "description": "The iteration of the package build from the above version.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "severityName": {
                                                    "description": "Deprecated, use Details.effective_severity instead\nThe severity (e.g., distro assigned severity) for this vulnerability.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "relatedUrls": {
                                        "description": "Output only. URLs related to this vulnerability.",
                                        "items": {
                                            "description": "Metadata for any related URL information.",
                                            "properties": {
                                                "label": {
                                                    "description": "Label to describe usage of the URL.",
                                                    "type": "string"
                                                },
                                                "url": {
                                                    "description": "Specific URL associated with the resource.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "severity": {
                                        "description": "Output only. The note provider assigned Severity of the vulnerability.",
                                        "enum": [
                                            "SEVERITY_UNSPECIFIED",
                                            "MINIMAL",
                                            "LOW",
                                            "MEDIUM",
                                            "HIGH",
                                            "CRITICAL"
                                        ],
                                        "type": "string"
                                    },
                                    "shortDescription": {
                                        "description": "Output only. A one sentence description of this vulnerability.",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "The type of package; whether native or non native(ruby gems, node.js\npackages etc)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        }
    }
}